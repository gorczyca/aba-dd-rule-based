%A

asm(w1HandlebarElevated).
asm(w2XSuspension).
asm(w3TypeMountain).
asm(w4FrameStepthrough).
asm(w5ColorOrange).
asm(w6HandlebarDropped).
asm(norTypeRoad1).
asm(norTypeRoad2).
asm(norTypeRoad3).
asm(norHandlebarTypeRoad1).
asm(norHandlebarTypeRoad2).
asm(norTypeMountain).
asm(norTypeMountainSuspension).
asm(norTypeHybrid).
asm(norFrameStepthrough).



%Contraries

contrary(w1HandlebarElevated,xW1HandlebarElevated).
contrary(w2XSuspension,xW2XSuspension).
contrary(w3TypeMountain,xW3TypeMountain).
contrary(w4FrameStepthrough,xW4FrameStepthrough).
contrary(w5ColorOrange,xW5ColorOrange).
contrary(w6HandlebarDropped,xW6HandlebarDropped).
contrary(norTypeRoad1,xNorTypeRoad1).
contrary(norTypeRoad2,xNorTypeRoad2).
contrary(norTypeRoad3,xNorTypeRoad3).
contrary(norHandlebarTypeRoad1,xNorHandlebarTypeRoad1).
contrary(norHandlebarTypeRoad2,xNorHandlebarTypeRoad2).
contrary(norTypeMountain,xNorTypeMountain).
contrary(norTypeMountainSuspension,xNorTypeMountainSuspension).
contrary(norTypeHybrid,xNorTypeHybrid).
contrary(norFrameStepthrough,xNorFrameStepthrough).



%
% Witnesses
%


rule(handlebarElevated,[w1HandlebarElevated]).
rule(xW1HandlebarElevated,[xHandlebarElevated]).

rule(xSuspension,[w2XSuspension]).
rule(xW2Xsuspension,[suspension]).

rule(typeMountain,[w3TypeMountain]).
rule(xW3TypeMountain,[xTypeMountain]).

rule(frameStepthrough,[w4FrameStepthrough]).
rule(xW4FrameStepthrough,[xFrameStepthrough]).


rule(colorOrange,[w5ColorOrange]).
rule(xW5ColorOrange,[xColorOrange]).

rule(handlebarDropped,[w6HandlebarDropped]).
rule(xW6HandlebarDropped,[xHandlebarDropped]). 





%
%  Bike types
%

% Defeasible rules for typeRoad


rule(typeRoad,[frameLightweight,wheelsSkinny,norTypeRoad1]).
rule(xNorTypeRoad1,[xTypeRoad]).

rule(typeRoad,[frameStepthrough,norTypeRoad2]).
rule(xNorTypeRoad2,[xTypeRoad]).

rule(typeRoad,[handlebarElevated,norTypeRoad3]).
rule(xNorTypeRoad3,[xTypeRoad]).


% Strict conditions for type-road


rule(frameLightweight,[typeRoad]).
rule(xTypeRoad,[xFrameLightweight]).


rule(wheelsSkinny,[typeRoad]).
rule(xTypeRoad,[xWheelsSkinny]).

rule(xSuspension,[TypeRoad]).
rule(xTypeRoad,[suspension]).



% Defeasible rules for handlebar typeRoad



rule(handlebarDropped,[typeRoad,norHandlebarTypeRoad1]).
rule(xNorHandlebarTypeRoad1,[xHandlebarDropped]).

rule(handlebarElevated,[typeRoad,norHandlebarTypeRoad2]).
rule(xNorHandlebarTypeRoad2,[xHandlebarElevated,xNorHandlebarTypeRoad1]).



% Defeasible rule for typeMountain



rule(typeMountain,[frameRugged, handlebarFlat, wheelsWide, norTypeMountain]).
rule(xNorTypeMountain,[xTypeMountain]).


% Strict rules for typeMountain



rule(wheelsWide,[typeMountain]).
rule(xTypeMountain,[xWheelsWide]).

rule(frameRugged,[typeMountain]).
rule(xTypeMountain,[xFrameRugged]).

rule(handlebarFlat,[typeMountain]).
rule(xTypeMountain,[xHandlebarFlat]).


% Defeasible rule for suspension typeMountain


rule(suspension,[typeMountain, norTypeMountainSuspension]).
rule(xNorTypeMountainSuspension,[xSuspension]).


%
% Hybrid bike
%


rule(typeHybrid,[xTypeRoad,xTypeMountain,norTypeHybrid]).
rule(xNorTypeHybrid,[xTypeHybrid]).



%
% About bicycle components
%

rule(frameLightweight,[frameStepthrough,norFrameStepthrough]).
rule(xNorFrameStepthrough,[xFrameLightweight]).



rule(suspension,[backSuspension]).
rule(suspension,[frontSuspension]).


rule(xBackSuspension,[xSuspension]).
rule(xFrontSuspension,[xSuspension]).




% Colors



rule(bright,[colorOrange]).
rule(bright,[colorRed]).


rule(xBright,[dark]).
rule(xColorOrange,[dark]).
rule(xColorRed,[dark]).

rule(xDark,[bright]).
rule(xDark,[colorOrange]).
rule(xDark,[colorRed]).






%
% Negation misc
%




rule(xTypeHybrid,[typeRoad]).
rule(xTypeMountain,[typeRoad]).
rule(xTypeRoad,[typeHybrid]).
rule(xTypeMountain,[typeHybrid]).
rule(xTypeRoad,[typeMountain]).
rule(xTypeHybrid,[typeMountain]).

rule(xFrameLightweight,[frameRugged]).
rule(xFrameRugged,[frameLightweight]).

rule(xWheelsSkinny,[wheelsWide]).
rule(xWheelsWide,[wheelsSkinny]).


rule(xHandlebarDropped,[handlebarFlat]).
rule(xHandlebarElevated,[handlebarFlat]).
rule(xHandlebarFlat,[handlebarDropped]).
rule(xHandlebarElevated,[handlebarDropped]).
rule(xHandlebarFlat,[handlebarElevated]).
rule(xHandlebarDropped,[handlebarElevated]).




% goals

goal(typeRoad).



% LOOP e.g.: handlebar-straight :- handlebar-flat ;       handlebar-flat :- handlebar-straight 


